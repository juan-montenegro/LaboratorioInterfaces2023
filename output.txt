## Structure of the project
  src
  target
  .gitignore
  LICENSE
  output.txt
  pom.xml
  README.md
  temp.txt
  tree_script.ps1
   main
   test
    java
    lib
     com
      univalle
       laboratoriointerfaces2023
        presentation
        Controller.java
        Data.java
        LaboratorioInterfaces2023.java
        LineChartP.java
        PrintPlainText.java
         MyGui.form
         MyGui.java
     jSerialComm
      jSerialComm-2.10.3.jar
    java
   classes
   generated-sources
   maven-status
   test-classes
    com
    .netbeans_automatic_build
     univalle
      laboratoriointerfaces2023
       presentation
    annotations
    maven-compiler-plugin
     compile
      default-compile
       createdFiles.lst
       inputFiles.lst
    .netbeans_automatic_build

## Project code:
**F:\univalle\interfacesLabs\LaboratorioInterfaces2023\pom.xml**
```
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.univalle</groupId>
    <artifactId>LaboratorioInterfaces2023</artifactId>
    <version>0.0.1</version>
    <packaging>jar</packaging>
    <dependencies>
        <dependency>
            <groupId>org.jfree</groupId>
            <artifactId>jfreechart</artifactId>
            <version>1.5.4</version>
            
            
        </dependency>
        <dependency>
            <groupId>lib</groupId>
            <artifactId>jSerialComm</artifactId>
            <version>2-10-3</version>
        </dependency>
    </dependencies>
    <repositories>
        <repository>
            <id>lib</id>
            <url>file://${project.basedir}/src/main/lib</url>
        </repository>
    </repositories>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>9</maven.compiler.source>
        <maven.compiler.target>9</maven.compiler.target>
        <exec.mainClass>com.univalle.laboratoriointerfaces2023.LaboratorioInterfaces2023</exec.mainClass>
    </properties>
</project>

```

**F:\univalle\interfacesLabs\LaboratorioInterfaces2023\tree_script.ps1**
```
# Setting up variables
$tmpFile = "temp.txt"
$ignoredFiles = ".DS_Store", "secrets.json", "README.md", "node_modules", "output.txt", 
                "temp.txt", "tree_script.sh", "package-lock.json", "ignored_files", ".git", 
                ".env", ".gitignore", "*.class",".jar", "LICENSE" # Ignoring .class files and LICENSE file
$projectRoot = Get-Location

# Function to create tree structure
function Show-Tree {
    param (
        [string]$path, 
        [string[]]$ignore
    )
    
    # Custom script block to filter out ignored items
    $scriptBlock = {
        foreach ($item in $ignore) {
            if ($_.FullName -like $item) {
                return $false
            }
        }
        return $true
    }

    Get-ChildItem -Path $path -Recurse | Where-Object $scriptBlock | ForEach-Object {
        $indent = " " * ($_.FullName -replace [regex]::Escape($projectRoot), '').Split('\').Count
        "$indent$($_.Name)"
    }
}

# Output the structure of the project to a temp file
"## Structure of the project" | Set-Content -Path $tmpFile

# Capture and ignore patterns while getting tree structure
Show-Tree -path $projectRoot -ignore $ignoredFiles | Add-Content -Path $tmpFile

$filePathList = @()

# Find all files by excluding the directories and ignored files
Get-ChildItem -Path $projectRoot -Recurse | Where-Object {
    !$_.PSIsContainer -and ($ignoredFiles -notcontains $_.Name) -and ($_.Extension -ne '.class') -and ($_.Name -ne 'LICENSE')
} | ForEach-Object {
    $filePathList += $_.FullName
}

# Output the project code to the temp file
"`n## Project code:" | Add-Content -Path $tmpFile

# Append the content of each file to the temp file
foreach ($file in $filePathList) {
    "**$file**" | Add-Content -Path $tmpFile
    '```' | Add-Content -Path $tmpFile
    Get-Content -Path $file | Add-Content -Path $tmpFile
    "" | Add-Content -Path $tmpFile
    '```' | Add-Content -Path $tmpFile
    "" | Add-Content -Path $tmpFile
}

# Move the temp file to the output file
Move-Item -Path $tmpFile -Destination "output.txt" -Force





```

**F:\univalle\interfacesLabs\LaboratorioInterfaces2023\src\main\java\com\univalle\laboratoriointerfaces2023\Controller.java**
```
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.univalle.laboratoriointerfaces2023;

import com.fazecast.jSerialComm.SerialPort;
import com.fazecast.jSerialComm.SerialPortDataListener;
import com.fazecast.jSerialComm.SerialPortEvent;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

/**
 *
 * @author camilo
 */
public class Controller implements Runnable, SerialPortDataListener
{
	private SerialPort puertoSerie;
	private byte[] myNewData;
	private InputStream myRxStream;
	private Thread myReadingThread;
        private Thread myWrittingThread;
	//private static String mySerialPortDesc = "COM2";
        private static int estadoFSM = 0;

        static final byte HEADER1 = 0x7a;
        static final byte HEADER2 = 0x7b;
        static final byte HEADER3 = 0x7c;
        
        byte B1;
        byte B2;
        
        public int readAnalog = 0;
        public int readDigital = 0;

        public boolean newDigitalByte = false;
        public boolean newAnalogData = false;
        public boolean newTime = false;
        
    public Controller(String COM) {
        
        puertoSerie = SerialPort.getCommPort(COM);
        //puertoSerie.setBaudRate(baudRate);
        puertoSerie.setComPortParameters(9600, 8, SerialPort.ONE_STOP_BIT, SerialPort.NO_PARITY);
        puertoSerie.openPort();
        
        myRxStream = puertoSerie.getInputStream();
        
        //Registrar eventos
        puertoSerie.addDataListener(this);
        //Hilo de ejecución para recivir datos
        myReadingThread = new Thread(this);
        myWrittingThread = new Thread(this);
	myReadingThread.start();
    }
    
    @Override
    public void run() {
        try 
	{
           while (true)
           {
		Thread.sleep(200);
           }
	} catch (InterruptedException e) {}
    }

    @Override
    public int getListeningEvents() {
        return SerialPort.LISTENING_EVENT_DATA_RECEIVED; 
    }

    @Override
    public void serialEvent(SerialPortEvent spe) {
        if (spe.getEventType() == SerialPort.LISTENING_EVENT_DATA_RECEIVED)
        {
            myNewData = spe.getReceivedData();
            for (int i = 0; i < myNewData.length; ++i){
                fsmRX(myNewData[i]);
                System.out.println((char)myNewData[i]);
            }

        } 
    }
    
    
   
    public boolean conectado(){
        return puertoSerie.isOpen();
    } 
    public boolean desconectar() {
        return puertoSerie.closePort();
    }
    
    public void fsmRX(byte trama){
        switch(estadoFSM){
            case 0:
                if(trama == HEADER1){
                    estadoFSM = 1;
                }
                break;
            case 1:
                if(trama == HEADER2){
                    estadoFSM = 2;
                }
                break;
            case 2:
                B1 = trama;
                estadoFSM = 3;
                break;
            case 3:
                if(trama == HEADER3){
                    estadoFSM = 0;
                    readDigital = B1;
                    newDigitalByte = true;
                }
                else{
                    B2 = trama;
                    estadoFSM = 4;
                }   
                    
                break;
                
            case 4:
                if(trama == HEADER3){
                    estadoFSM = 0;
                    readAnalog = 0; 
                    readAnalog = (B1)<< 8 | ((B2) & 0xFF) ; 
                    newAnalogData = true;
                    newTime = true;
                }
                break;
          }

    }
    
    public static float byteArrayToFloat(byte[] bytes) {
        int intBits = 
        bytes[0] << 24 | (bytes[1] & 0xFF) << 16 | (bytes[2] & 0xFF) << 8 | (bytes[3] & 0xFF);
        return Float.intBitsToFloat(intBits);  
    }
    
    public void enviarTexto(String data) {
        myWrittingThread.start();
        if (puertoSerie.isOpen()) {
            try {
                OutputStream out = puertoSerie.getOutputStream();
                out.write(data.getBytes()); // Envía la cadena como un array de bytes
                out.flush();
            } catch (IOException e) {
                e.printStackTrace();
            }
        } else {
            System.out.println("El puerto COM no está abierto.");
        }
        
    }
}

```

**F:\univalle\interfacesLabs\LaboratorioInterfaces2023\src\main\java\com\univalle\laboratoriointerfaces2023\Data.java**
```
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.univalle.laboratoriointerfaces2023;

import java.util.ArrayList;

/**
 *
 * @author camilo, montenegro
 */
public class Data {
    
ArrayList<ArrayList<Double>> sigAnalog0 = new ArrayList<>();
ArrayList<ArrayList<Double>> sigAnalog1 = new ArrayList<>();
ArrayList<ArrayList<Double>> sigAnalog2 = new ArrayList<>();
ArrayList<ArrayList<Double>> sigAnalog3 = new ArrayList<>();
ArrayList<ArrayList<Double>> sigAnalog4 = new ArrayList<>();
ArrayList<ArrayList<Double>> sigAnalog5 = new ArrayList<>();
ArrayList<ArrayList<Double>> sigAnalog6 = new ArrayList<>();
ArrayList<ArrayList<Double>> sigAnalog7 = new ArrayList<>();

ArrayList<Double> timeA0 = new ArrayList<>();
ArrayList<Double> timeA1 = new ArrayList<>();
ArrayList<Double> timeA2 = new ArrayList<>();
ArrayList<Double> timeA3 = new ArrayList<>();
ArrayList<Double> timeA4 = new ArrayList<>();
ArrayList<Double> timeA5 = new ArrayList<>();
ArrayList<Double> timeA6 = new ArrayList<>();
ArrayList<Double> timeA7 = new ArrayList<>();

ArrayList<ArrayList<Double>> sigDigital0 = new ArrayList<>();
ArrayList<ArrayList<Double>> sigDigital1 = new ArrayList<>();
ArrayList<ArrayList<Double>> sigDigital2 = new ArrayList<>();
ArrayList<ArrayList<Double>> sigDigital3 = new ArrayList<>();

ArrayList<Double> timeD0 = new ArrayList<>();
ArrayList<Double> timeD1 = new ArrayList<>();    
ArrayList<Double> timeD2 = new ArrayList<>();
ArrayList<Double> timeD3 = new ArrayList<>();

public void insersion(double timeMues, double valor){

}

}

```

**F:\univalle\interfacesLabs\LaboratorioInterfaces2023\src\main\java\com\univalle\laboratoriointerfaces2023\LaboratorioInterfaces2023.java**
```
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 */

package com.univalle.laboratoriointerfaces2023;
import com.univalle.laboratoriointerfaces2023.presentation.MyGui;

/**
 *
 * @author juane
 */
public class LaboratorioInterfaces2023 {
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        //java.awt.EventQueue.invokeLater(() -> {
        //    new MyGui().setVisible(true);
        //});
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyGui().setVisible(true);
            }
        });
    }
}

```

**F:\univalle\interfacesLabs\LaboratorioInterfaces2023\src\main\java\com\univalle\laboratoriointerfaces2023\LineChartP.java**
```
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.univalle.laboratoriointerfaces2023;

import java.awt.BorderLayout;
import java.awt.Color;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.data.xy.DefaultXYDataset;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @authores: 
 * Juan David Beltran
 * Juan Esteban Montenegro
 *Juan Camilo Chavez 
 * Fecha: 4/10/2023
 */
public final class LineChartP extends JPanel{
    
    private final int NUM_VALUES = 100;

    private double[][] sineValues;
    private double[][] cosineValues;
    //private DefaultXYDataset dataset;

    /*public void createDataset(double tiempoMues, CircularBuffer buffer) {
        double[][] chartData = new double[2][NUM_VALUES]; // Two rows: one for X, one for Y
        double[] bufferData = buffer.getAllValues(); // The Y-axis data
        double t = 0.0;

        // Iterate over the buffer data to create the data points for the chart
        for (int i = 0; i < bufferData.length; i++) {
            chartData[0][i] = t;             // X-axis will be incremented by tiempoMues each time
            chartData[1][i] = bufferData[i]; // Y-axis data from buffer
            t += tiempoMues;
        }

        dataset = new DefaultXYDataset();
        dataset.addSeries("COM Port Data", chartData);
    }*/
    
   /*  public void createDataset(double tiempoMues) {

        sineValues = new double[2][NUM_VALUES];
        cosineValues = new double[2][NUM_VALUES];
        double t = 0.0;
        // X values
        for (int i = 0; i < NUM_VALUES; i++) {
            sineValues[0][i] = t;
            cosineValues[0][i] = t;
            t+=tiempoMues;
        }
        // Y values
        for (int i = 0; i < NUM_VALUES; i++) {
            sineValues[1][i] = Math.sin(sineValues[0][i]);
            cosineValues[1][i] = Math.cos(cosineValues[0][i]);
        }

        dataset = new DefaultXYDataset();
        dataset.addSeries("Sine", sineValues);
        dataset.addSeries("Cosine", cosineValues);
    }*/
    public LineChartP(double tiempoMues, String tittle, XYSeriesCollection dataset) {
        
        setLayout(new BorderLayout());
        
        //this.createDataset(tiempoMues, buffer);//HEY CUIDADO AQUI!!!
        //this.createDataset(tiempoMues);
        
        // Create the chart using the dataset
        JFreeChart lineChart = ChartFactory.createXYLineChart(
                tittle, // The chart title
                "Tiempo", // x axis label
                "Amplitud", // y axis label
                dataset, // The dataset for the chart
                PlotOrientation.VERTICAL,
                true, // Is a legend required?
                false, // Use tooltips
                false // Configure chart to generate URLs?
        );
        
         // Personalización del gráfico (solo un ejemplo)
        lineChart.getPlot().setBackgroundPaint(Color.white);
        //... (otras personalizaciones)
        XYPlot plot = lineChart.getXYPlot();
        XYItemRenderer renderer = plot.getRenderer();
        if(tittle.charAt(0)=='A'){
            renderer.setSeriesPaint(0, Color.RED); 
        } 
        if(tittle.charAt(0)=='D'){
            renderer.setSeriesPaint(0, Color.BLUE); 
        }
        
        plot.setDomainGridlinePaint(Color.black);  // Color negro para las líneas de cuadrícula del dominio (eje X)
        plot.setRangeGridlinePaint(Color.black);  // Color negro para las líneas de cuadrícula del rango (eje Y)
        
       ChartPanel chartPanel = new ChartPanel(lineChart);
        add(chartPanel, BorderLayout.CENTER);
       
    }
    
     /*public DefaultXYDataset getDataset(){
         return this.dataset;
     }*/
}

```

**F:\univalle\interfacesLabs\LaboratorioInterfaces2023\src\main\java\com\univalle\laboratoriointerfaces2023\PrintPlainText.java**
```
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.univalle.laboratoriointerfaces2023;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import org.jfree.data.xy.DefaultXYDataset;


/**
 *
 * @author juane
 */
public class PrintPlainText {
    
    public static void saveToPlainText(String fileName, int serie, DefaultXYDataset dataset) throws IOException {
        BufferedWriter outputWriter;
        outputWriter = new BufferedWriter(new FileWriter(fileName+".txt"));
        for (int i = 0; i < dataset.getItemCount(0); i++) {
            // Maybe:
            outputWriter.write(dataset.getX(serie, i)+"\t\t");
            outputWriter.write(dataset.getY(serie, i)+"\t\t");
            outputWriter.newLine();
         }
        outputWriter.flush();  
        outputWriter.close();                 
    }
    
}

```

**F:\univalle\interfacesLabs\LaboratorioInterfaces2023\src\main\java\com\univalle\laboratoriointerfaces2023\presentation\MyGui.form**
```
<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.3" maxVersion="1.9" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
  <NonVisualComponents>
    <Component class="javax.swing.ButtonGroup" name="seleccionSenal">
    </Component>
  </NonVisualComponents>
  <Properties>
    <Property name="defaultCloseOperation" type="int" value="3"/>
    <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
      <Color blue="ff" green="ff" red="ff" type="rgb"/>
    </Property>
  </Properties>
  <SyntheticProperties>
    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
    <SyntheticProperty name="generateCenter" type="boolean" value="false"/>
  </SyntheticProperties>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
  </AuxValues>

  <Layout>
    <DimensionLayout dim="0">
      <Group type="103" groupAlignment="0" attributes="0">
          <Group type="102" alignment="0" attributes="0">
              <EmptySpace max="-2" attributes="0"/>
              <Component id="jPanel1" min="-2" max="-2" attributes="0"/>
              <EmptySpace type="unrelated" max="-2" attributes="0"/>
              <Component id="linePanel" max="32767" attributes="0"/>
              <EmptySpace max="-2" attributes="0"/>
          </Group>
      </Group>
    </DimensionLayout>
    <DimensionLayout dim="1">
      <Group type="103" groupAlignment="0" attributes="0">
          <Group type="102" alignment="1" attributes="0">
              <EmptySpace max="-2" attributes="0"/>
              <Group type="103" groupAlignment="1" attributes="0">
                  <Component id="jPanel1" max="32767" attributes="0"/>
                  <Component id="linePanel" max="32767" attributes="0"/>
              </Group>
              <EmptySpace max="-2" attributes="0"/>
          </Group>
      </Group>
    </DimensionLayout>
  </Layout>
  <SubComponents>
    <Container class="javax.swing.JPanel" name="jPanel1">
      <Properties>
        <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
          <Border info="org.netbeans.modules.form.compat2.border.EtchedBorderInfo">
            <EtchetBorder/>
          </Border>
        </Property>
      </Properties>

      <Layout>
        <DimensionLayout dim="0">
          <Group type="103" groupAlignment="0" attributes="0">
              <Group type="102" attributes="0">
                  <EmptySpace max="-2" attributes="0"/>
                  <Group type="103" groupAlignment="0" attributes="0">
                      <Group type="102" attributes="0">
                          <Group type="103" groupAlignment="0" attributes="0">
                              <Component id="signalD" alignment="0" min="-2" pref="125" max="-2" attributes="0"/>
                              <Group type="102" alignment="0" attributes="0">
                                  <EmptySpace min="-2" pref="21" max="-2" attributes="0"/>
                                  <Component id="comboSignalA" min="-2" pref="102" max="-2" attributes="0"/>
                              </Group>
                              <Group type="102" alignment="0" attributes="0">
                                  <EmptySpace min="-2" pref="13" max="-2" attributes="0"/>
                                  <Group type="103" groupAlignment="0" attributes="0">
                                      <Group type="103" groupAlignment="1" attributes="0">
                                          <Component id="jLabel3" min="-2" max="-2" attributes="0"/>
                                          <Component id="comboSignalD" alignment="1" min="-2" pref="102" max="-2" attributes="0"/>
                                      </Group>
                                      <Group type="102" alignment="0" attributes="0">
                                          <Component id="DO2" min="-2" max="-2" attributes="0"/>
                                          <EmptySpace max="-2" attributes="0"/>
                                          <Component id="DO3" min="-2" max="-2" attributes="0"/>
                                      </Group>
                                      <Group type="102" alignment="0" attributes="0">
                                          <Component id="DO0" min="-2" max="-2" attributes="0"/>
                                          <EmptySpace max="-2" attributes="0"/>
                                          <Component id="DO1" min="-2" max="-2" attributes="0"/>
                                      </Group>
                                  </Group>
                              </Group>
                          </Group>
                          <EmptySpace min="0" pref="24" max="32767" attributes="0"/>
                      </Group>
                      <Group type="102" alignment="1" attributes="0">
                          <EmptySpace min="0" pref="0" max="32767" attributes="0"/>
                          <Component id="tiempoMuestreo" min="-2" max="-2" attributes="0"/>
                          <EmptySpace max="-2" attributes="0"/>
                          <Component id="jLabel4" min="-2" pref="37" max="-2" attributes="0"/>
                      </Group>
                  </Group>
                  <EmptySpace max="-2" attributes="0"/>
              </Group>
              <Group type="102" alignment="1" attributes="0">
                  <EmptySpace pref="12" max="32767" attributes="0"/>
                  <Group type="103" groupAlignment="1" attributes="0">
                      <Component id="jLabel2" min="-2" max="-2" attributes="0"/>
                      <Component id="jButton1" min="-2" max="-2" attributes="0"/>
                  </Group>
                  <EmptySpace min="-2" pref="17" max="-2" attributes="0"/>
              </Group>
              <Group type="102" attributes="0">
                  <Group type="103" groupAlignment="0" attributes="0">
                      <Group type="102" alignment="0" attributes="0">
                          <EmptySpace max="-2" attributes="0"/>
                          <Component id="signalA" min="-2" max="-2" attributes="0"/>
                      </Group>
                      <Group type="102" alignment="0" attributes="0">
                          <EmptySpace min="-2" pref="30" max="-2" attributes="0"/>
                          <Component id="jLabel1" min="-2" max="-2" attributes="0"/>
                      </Group>
                  </Group>
                  <EmptySpace max="32767" attributes="0"/>
              </Group>
          </Group>
        </DimensionLayout>
        <DimensionLayout dim="1">
          <Group type="103" groupAlignment="0" attributes="0">
              <Group type="102" alignment="1" attributes="0">
                  <EmptySpace max="-2" attributes="0"/>
                  <Component id="jLabel1" min="-2" pref="40" max="-2" attributes="0"/>
                  <EmptySpace max="-2" attributes="0"/>
                  <Component id="signalA" min="-2" max="-2" attributes="0"/>
                  <EmptySpace max="-2" attributes="0"/>
                  <Component id="comboSignalA" min="-2" max="-2" attributes="0"/>
                  <EmptySpace type="separate" max="-2" attributes="0"/>
                  <Component id="signalD" min="-2" max="-2" attributes="0"/>
                  <EmptySpace type="unrelated" max="-2" attributes="0"/>
                  <Component id="comboSignalD" min="-2" max="-2" attributes="0"/>
                  <EmptySpace type="unrelated" max="-2" attributes="0"/>
                  <Component id="jLabel3" min="-2" max="-2" attributes="0"/>
                  <EmptySpace max="-2" attributes="0"/>
                  <Group type="103" groupAlignment="3" attributes="0">
                      <Component id="tiempoMuestreo" alignment="3" min="-2" max="-2" attributes="0"/>
                      <Component id="jLabel4" alignment="3" min="-2" max="-2" attributes="0"/>
                  </Group>
                  <EmptySpace min="-2" pref="12" max="-2" attributes="0"/>
                  <Component id="jButton1" min="-2" max="-2" attributes="0"/>
                  <EmptySpace min="-2" pref="35" max="-2" attributes="0"/>
                  <Component id="jLabel2" min="-2" pref="28" max="-2" attributes="0"/>
                  <EmptySpace type="unrelated" max="-2" attributes="0"/>
                  <Group type="103" groupAlignment="3" attributes="0">
                      <Component id="DO0" alignment="3" min="-2" pref="22" max="-2" attributes="0"/>
                      <Component id="DO1" alignment="3" min="-2" pref="22" max="-2" attributes="0"/>
                  </Group>
                  <EmptySpace type="unrelated" max="-2" attributes="0"/>
                  <Group type="103" groupAlignment="3" attributes="0">
                      <Component id="DO2" alignment="3" min="-2" pref="22" max="-2" attributes="0"/>
                      <Component id="DO3" alignment="3" min="-2" pref="22" max="-2" attributes="0"/>
                  </Group>
                  <EmptySpace max="32767" attributes="0"/>
              </Group>
          </Group>
        </DimensionLayout>
      </Layout>
      <SubComponents>
        <Component class="javax.swing.JComboBox" name="comboSignalD">
          <Properties>
            <Property name="model" type="javax.swing.ComboBoxModel" editor="org.netbeans.modules.form.editors2.ComboBoxModelEditor">
              <StringArray count="4">
                <StringItem index="0" value="D0"/>
                <StringItem index="1" value="D1"/>
                <StringItem index="2" value="D2"/>
                <StringItem index="3" value="D3"/>
              </StringArray>
            </Property>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="comboSignalDActionPerformed"/>
          </Events>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_TypeParameters" type="java.lang.String" value="&lt;String&gt;"/>
          </AuxValues>
        </Component>
        <Component class="javax.swing.JComboBox" name="comboSignalA">
          <Properties>
            <Property name="model" type="javax.swing.ComboBoxModel" editor="org.netbeans.modules.form.editors2.ComboBoxModelEditor">
              <StringArray count="8">
                <StringItem index="0" value="A0"/>
                <StringItem index="1" value="A1"/>
                <StringItem index="2" value="A2"/>
                <StringItem index="3" value="A3"/>
                <StringItem index="4" value="A4"/>
                <StringItem index="5" value="A5"/>
                <StringItem index="6" value="A6"/>
                <StringItem index="7" value="A7"/>
              </StringArray>
            </Property>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="comboSignalAActionPerformed"/>
          </Events>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_TypeParameters" type="java.lang.String" value="&lt;String&gt;"/>
          </AuxValues>
        </Component>
        <Component class="javax.swing.JTextField" name="tiempoMuestreo">
          <Properties>
            <Property name="text" type="java.lang.String" value="0.1"/>
            <Property name="toolTipText" type="java.lang.String" value=""/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="tiempoMuestreoActionPerformed"/>
          </Events>
        </Component>
        <Component class="javax.swing.JLabel" name="jLabel3">
          <Properties>
            <Property name="text" type="java.lang.String" value="Tiempo de muestreo"/>
          </Properties>
        </Component>
        <Component class="javax.swing.JRadioButton" name="signalD">
          <Properties>
            <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
              <ComponentRef name="seleccionSenal"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Se&#xf1;ales Digitales"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="signalDActionPerformed"/>
          </Events>
        </Component>
        <Component class="javax.swing.JRadioButton" name="signalA">
          <Properties>
            <Property name="buttonGroup" type="javax.swing.ButtonGroup" editor="org.netbeans.modules.form.RADComponent$ButtonGroupPropertyEditor">
              <ComponentRef name="seleccionSenal"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Se&#xf1;ales Anal&#xf3;gicas"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="signalAActionPerformed"/>
          </Events>
        </Component>
        <Component class="javax.swing.JButton" name="jButton1">
          <Properties>
            <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="cc" green="ff" red="cc" type="rgb"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Seleccionar"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton1ActionPerformed"/>
          </Events>
        </Component>
        <Component class="javax.swing.JToggleButton" name="DO0">
          <Properties>
            <Property name="text" type="java.lang.String" value="DO0"/>
          </Properties>
          <Events>
            <EventHandler event="stateChanged" listener="javax.swing.event.ChangeListener" parameters="javax.swing.event.ChangeEvent" handler="DO0StateChanged"/>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="DO0ActionPerformed"/>
          </Events>
        </Component>
        <Component class="javax.swing.JLabel" name="jLabel1">
          <Properties>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Segoe UI" size="12" style="3"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Inputs Signals"/>
          </Properties>
        </Component>
        <Component class="javax.swing.JLabel" name="jLabel2">
          <Properties>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Segoe UI" size="12" style="3"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Outputs DIgital Signals"/>
          </Properties>
        </Component>
        <Component class="javax.swing.JToggleButton" name="DO1">
          <Properties>
            <Property name="text" type="java.lang.String" value="DO1"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="DO1ActionPerformed"/>
          </Events>
        </Component>
        <Component class="javax.swing.JToggleButton" name="DO2">
          <Properties>
            <Property name="text" type="java.lang.String" value="DO2"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="DO2ActionPerformed"/>
          </Events>
        </Component>
        <Component class="javax.swing.JToggleButton" name="DO3">
          <Properties>
            <Property name="text" type="java.lang.String" value="DO3"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="DO3ActionPerformed"/>
          </Events>
        </Component>
        <Component class="javax.swing.JLabel" name="jLabel4">
          <Properties>
            <Property name="text" type="java.lang.String" value="s"/>
          </Properties>
        </Component>
      </SubComponents>
    </Container>
    <Container class="javax.swing.JPanel" name="linePanel">

      <Layout>
        <DimensionLayout dim="0">
          <Group type="103" groupAlignment="0" attributes="0">
              <EmptySpace min="0" pref="547" max="32767" attributes="0"/>
          </Group>
        </DimensionLayout>
        <DimensionLayout dim="1">
          <Group type="103" groupAlignment="0" attributes="0">
              <EmptySpace min="0" pref="436" max="32767" attributes="0"/>
          </Group>
        </DimensionLayout>
      </Layout>
    </Container>
  </SubComponents>
</Form>

```

**F:\univalle\interfacesLabs\LaboratorioInterfaces2023\src\main\java\com\univalle\laboratoriointerfaces2023\presentation\MyGui.java**
```
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.univalle.laboratoriointerfaces2023.presentation;
import com.univalle.laboratoriointerfaces2023.Controller;
import com.univalle.laboratoriointerfaces2023.LineChartP;
import com.univalle.laboratoriointerfaces2023.PrintPlainText;
import java.awt.BorderLayout;
import java.awt.Color;
import java.io.IOException;
import java.util.ArrayList;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author juane
 */
public class MyGui extends javax.swing.JFrame {

    public double timeMues = 0.0;
    public String señalAnSelect = "";
    public String señalDgSelect = "";
    public String tittleChart = "";
    
    
    ScheduledExecutorService scheduler;
    ScheduledExecutorService scheduler2;
    
    public Runnable ploteando;
    public Controller esp32;
    public boolean primero = true;
    
    XYSeries grafica;
    XYSeriesCollection dataset;
    public LineChartP newChart = new LineChartP(timeMues,tittleChart, dataset ); 
    private final int NUM_VALUES = 200;
    
    public ArrayList<Double> signal = new ArrayList<>();
    public ArrayList<Double> time = new ArrayList<>();
    double t = 0;
    
    /**
     * Creates new form myGui
     */
    public MyGui() {
        initComponents();
        
        dataset = new XYSeriesCollection();
        dataset.addSeries(grafica);
        
        //LineChartP newChart = new LineChartP(timeMues,tittleChart, dataset );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        seleccionSenal = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        comboSignalD = new javax.swing.JComboBox<>();
        comboSignalA = new javax.swing.JComboBox<>();
        tiempoMuestreo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        signalD = new javax.swing.JRadioButton();
        signalA = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        DO0 = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        DO1 = new javax.swing.JToggleButton();
        DO2 = new javax.swing.JToggleButton();
        DO3 = new javax.swing.JToggleButton();
        jLabel4 = new javax.swing.JLabel();
        linePanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        comboSignalD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "D0", "D1", "D2", "D3" }));
        comboSignalD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSignalDActionPerformed(evt);
            }
        });

        comboSignalA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A0", "A1", "A2", "A3", "A4", "A5", "A6", "A7" }));
        comboSignalA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSignalAActionPerformed(evt);
            }
        });

        tiempoMuestreo.setText("0.1");
        tiempoMuestreo.setToolTipText("");
        tiempoMuestreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tiempoMuestreoActionPerformed(evt);
            }
        });

        jLabel3.setText("Tiempo de muestreo");

        seleccionSenal.add(signalD);
        signalD.setText("Señales Digitales");
        signalD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signalDActionPerformed(evt);
            }
        });

        seleccionSenal.add(signalA);
        signalA.setText("Señales Analógicas");
        signalA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signalAActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(204, 255, 204));
        jButton1.setText("Seleccionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        DO0.setText("DO0");
        DO0.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                DO0StateChanged(evt);
            }
        });
        DO0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DO0ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel1.setText("Inputs Signals");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel2.setText("Outputs DIgital Signals");

        DO1.setText("DO1");
        DO1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DO1ActionPerformed(evt);
            }
        });

        DO2.setText("DO2");
        DO2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DO2ActionPerformed(evt);
            }
        });

        DO3.setText("DO3");
        DO3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DO3ActionPerformed(evt);
            }
        });

        jLabel4.setText("s");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(signalD, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(comboSignalA, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel3)
                                        .addComponent(comboSignalD, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(DO2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(DO3))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(DO0)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(DO1)))))
                        .addGap(0, 24, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(tiempoMuestreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jButton1))
                .addGap(17, 17, 17))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(signalA))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(signalA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboSignalA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(signalD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboSignalD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tiempoMuestreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(12, 12, 12)
                .addComponent(jButton1)
                .addGap(35, 35, 35)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DO0, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DO1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DO2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DO3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout linePanelLayout = new javax.swing.GroupLayout(linePanel);
        linePanel.setLayout(linePanelLayout);
        linePanelLayout.setHorizontalGroup(
            linePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 547, Short.MAX_VALUE)
        );
        linePanelLayout.setVerticalGroup(
            linePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 436, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(linePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(linePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tiempoMuestreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tiempoMuestreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tiempoMuestreoActionPerformed

    private void signalDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signalDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_signalDActionPerformed

    private void signalAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signalAActionPerformed
            // TODO add your handling code here:
            
    }//GEN-LAST:event_signalAActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        timeMues = getTiempoMuestreo();  
        System.out.println("Tiempo de Muestreo: " + timeMues);  // Imprime el valor
        
        linePanel.removeAll();   // 2. Elimina todos los componentes del linePanel
        linePanel.add(newChart); // 3. Añade la nueva instancia de LineChartP a linePanel
        linePanel.revalidate();  // 4. Revalida el linePanel para que se tenga en cuenta cualquier cambio en la estructura de componentes.
        linePanel.repaint();
        linePanel.setLayout(new BorderLayout());
        linePanel.add(newChart, BorderLayout.CENTER);

        if(signalA.isSelected()){
           System.out.println("Señal seleccionada: "+ señalAnSelect);
           tittleChart = señalAnSelect;
                   
        }
        else if(signalD.isSelected()){
            System.out.println("Señal seleccionada: "+ señalDgSelect);
            tittleChart = señalDgSelect;
        }
        else{JOptionPane.showMessageDialog(null, "Error:  Seleccione una señal", "Señal Error", JOptionPane.ERROR_MESSAGE);}
        
        //esp32.enviarTexto("T"+timeMues+"|"+tittleChart);
        System.out.println("T"+timeMues+"|"+tittleChart);
        
        if(primero){
            grafica.remove(0);

            scheduler = Executors.newScheduledThreadPool(1);

            ploteando = new Runnable (){
                @Override
                public void run() {

                    if(esp32.newAnalogData){

                            time.add(t);

                            if(tittleChart.charAt(0)=='A'){
                                signal.add((double)esp32.readAnalog);
                                grafica.add( t ,(double)esp32.readAnalog);
                            }

                            else if(tittleChart.charAt(0)=='D'){
                                signal.add((double)esp32.readDigital);
                                grafica.add( t ,(double)esp32.readDigital);
                            }

                            if (grafica.getItemCount() > NUM_VALUES) {
                                grafica.remove(0); 
                            }

                            linePanel.repaint();

                            t += timeMues;
                            System.out.println(t);

                            if(tittleChart.charAt(0)=='A'){
                            esp32.newAnalogData = false;}
                            else if(tittleChart.charAt(0)=='D'){
                            esp32.newDigitalByte = false;}

                        }
                }

            };
            scheduler.scheduleAtFixedRate(ploteando, 0, 200, TimeUnit.MILLISECONDS);
            primero = false;
        }
        
        
        //try {
          //  PrintPlainText.saveToPlainText("seno", 0,newChart.getDataset());
          //  PrintPlainText.saveToPlainText("coseno", 1,newChart.getDataset());
        //} catch (IOException ex) {
          //  Logger.getLogger(MyGui.class.getName()).log(Level.SEVERE, null, ex);
        //}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void comboSignalAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSignalAActionPerformed
        // TODO add your handling code here:
        JComboBox cb = (JComboBox)evt.getSource();
        señalAnSelect = (String)cb.getSelectedItem();
        
    }//GEN-LAST:event_comboSignalAActionPerformed

    private void comboSignalDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSignalDActionPerformed
        JComboBox cb = (JComboBox)evt.getSource();
        señalDgSelect = (String)cb.getSelectedItem();// TODO add your handling code here:
    }//GEN-LAST:event_comboSignalDActionPerformed

    private void DO0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DO0ActionPerformed
        // TODO add your handling code here:
        int stateDo0 = 0;
        
        if(DO0.isSelected()){
            System.out.println("D0 ON");
            stateDo0 = 1;
            DO0.setBackground(new Color(251, 208, 62));
        }else{System.out.println("D0 OFF");
              DO0.setBackground(new Color(242, 80, 44));
              stateDo0 = 0;
        }
        
        esp32.enviarTexto("o0"+stateDo0);
        System.out.println("o0"+stateDo0);
    }//GEN-LAST:event_DO0ActionPerformed

    private void DO1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DO1ActionPerformed
        
        int stateDo1 = 0;
        
        if(DO1.isSelected()){
            System.out.println("D1 ON");
            DO1.setBackground(new Color(251, 208, 62));
            stateDo1 = 1;
        }else{System.out.println("D1 OFF");
              DO1.setBackground(new Color(242, 80, 44));
              stateDo1 = 0;
        }// TODO add your handling code here:
        
        esp32.enviarTexto("o1"+stateDo1);
        System.out.println("o1"+stateDo1);
    }//GEN-LAST:event_DO1ActionPerformed

    private void DO2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DO2ActionPerformed
        
        int stateDo2 = 0;
        
        if(DO2.isSelected()){
            System.out.println("D2 ON");
            DO2.setBackground(new Color(251, 208, 62));
            stateDo2 = 1;
        }else{System.out.println("D2 OFF");
              DO2.setBackground(new Color(242, 80, 44));
              stateDo2 = 0;
        }// TODO add your handling code here:
        esp32.enviarTexto("o2"+stateDo2);
        System.out.println("o2"+stateDo2);
    }//GEN-LAST:event_DO2ActionPerformed

    private void DO3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DO3ActionPerformed
        
        int stateDo3 = 0;
        
        if(DO3.isSelected()){
            System.out.println("D3 ON");
            DO3.setBackground(new Color(251, 208, 62));
            stateDo3 = 1;
        }else{System.out.println("D3 OFF");
              DO3.setBackground(new Color(242, 80, 44));
              stateDo3 = 0;
        }// TODO add your handling code here:
        
        esp32.enviarTexto("o3"+stateDo3);
        System.out.println("o3"+stateDo3);
    }//GEN-LAST:event_DO3ActionPerformed

    private void DO0StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_DO0StateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_DO0StateChanged

    public double getTiempoMuestreo() {
        String timeS =tiempoMuestreo.getText();
        double tiempoMues = 0.0;
        try {
            tiempoMues = Double.parseDouble(timeS);
            
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Error: '" + timeS+ "' no es un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        return tiempoMues;
    }
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton DO0;
    private javax.swing.JToggleButton DO1;
    private javax.swing.JToggleButton DO2;
    private javax.swing.JToggleButton DO3;
    private javax.swing.JComboBox<String> comboSignalA;
    private javax.swing.JComboBox<String> comboSignalD;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel linePanel;
    private javax.swing.ButtonGroup seleccionSenal;
    private javax.swing.JRadioButton signalA;
    private javax.swing.JRadioButton signalD;
    private javax.swing.JTextField tiempoMuestreo;
    // End of variables declaration//GEN-END:variables
}

```


**F:\univalle\interfacesLabs\LaboratorioInterfaces2023\target\classes\.netbeans_automatic_build**
```

```

**F:\univalle\interfacesLabs\LaboratorioInterfaces2023\target\maven-status\maven-compiler-plugin\compile\default-compile\createdFiles.lst**
```
com\univalle\laboratoriointerfaces2023\presentation\MyGui$4.class
com\univalle\laboratoriointerfaces2023\presentation\MyGui$6.class
com\univalle\laboratoriointerfaces2023\presentation\MyGui$9.class
com\univalle\laboratoriointerfaces2023\PrintPlainText.class
com\univalle\laboratoriointerfaces2023\presentation\MyGui.class
com\univalle\laboratoriointerfaces2023\presentation\MyGui$10.class
com\univalle\laboratoriointerfaces2023\presentation\MyGui$11.class
com\univalle\laboratoriointerfaces2023\presentation\MyGui$5.class
com\univalle\laboratoriointerfaces2023\presentation\MyGui$1.class
com\univalle\laboratoriointerfaces2023\presentation\MyGui$2.class
com\univalle\laboratoriointerfaces2023\presentation\MyGui$8.class
com\univalle\laboratoriointerfaces2023\presentation\MyGui$3.class
com\univalle\laboratoriointerfaces2023\LaboratorioInterfaces2023.class
com\univalle\laboratoriointerfaces2023\LineChartP.class
com\univalle\laboratoriointerfaces2023\presentation\MyGui$7.class

```

**F:\univalle\interfacesLabs\LaboratorioInterfaces2023\target\maven-status\maven-compiler-plugin\compile\default-compile\inputFiles.lst**
```
F:\univalle\interfacesLabs\LaboratorioInterfaces2023\src\main\java\com\univalle\laboratoriointerfaces2023\LineChartP.java
F:\univalle\interfacesLabs\LaboratorioInterfaces2023\src\main\java\com\univalle\laboratoriointerfaces2023\presentation\MyGui.java
F:\univalle\interfacesLabs\LaboratorioInterfaces2023\src\main\java\com\univalle\laboratoriointerfaces2023\PrintPlainText.java
F:\univalle\interfacesLabs\LaboratorioInterfaces2023\src\main\java\com\univalle\laboratoriointerfaces2023\LaboratorioInterfaces2023.java

```

**F:\univalle\interfacesLabs\LaboratorioInterfaces2023\target\test-classes\.netbeans_automatic_build**
```

```

