/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.univalle.laboratoriointerfaces2023.presentation;
import com.univalle.laboratoriointerfaces2023.Controller;
import com.univalle.laboratoriointerfaces2023.LineChartP;
import com.univalle.laboratoriointerfaces2023.PrintPlainText;
import java.awt.BorderLayout;
import java.awt.Color;
import java.io.IOException;
import java.util.ArrayList;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author juane
 */
public class MyGui extends javax.swing.JFrame {

    public double timeMues = 0.0;
    public String señalAnSelect = "";
    public String señalDgSelect = "";
    public String tittleChart = "hola";
    
    
    ScheduledExecutorService scheduler;
    ScheduledExecutorService scheduler2;
    
    public Runnable ploteando;
    public Controller esp32;
    public boolean primero = true;
    
    public XYSeries grafica = new XYSeries("hola");
    public XYSeriesCollection dataset;
    public LineChartP newChart = new LineChartP(timeMues,tittleChart, dataset ); 
    private final int NUM_VALUES = 200;
    
    public ArrayList<Double> signal = new ArrayList<>();
    public ArrayList<Double> time = new ArrayList<>();
    double t = 0;
    
    /**
     * Creates new form myGui
     */
    public MyGui() {
        initComponents();
        
        
        grafica.add(0,0);
        
        dataset = new XYSeriesCollection();
        dataset.addSeries(grafica);
        
        //LineChartP newChart = new LineChartP(timeMues,tittleChart, dataset );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        seleccionSenal = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        comboSignalD = new javax.swing.JComboBox<>();
        comboSignalA = new javax.swing.JComboBox<>();
        tiempoMuestreo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        signalD = new javax.swing.JRadioButton();
        signalA = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        DO0 = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        DO1 = new javax.swing.JToggleButton();
        DO2 = new javax.swing.JToggleButton();
        DO3 = new javax.swing.JToggleButton();
        jLabel4 = new javax.swing.JLabel();
        linePanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        comboSignalD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "D0", "D1", "D2", "D3" }));
        comboSignalD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSignalDActionPerformed(evt);
            }
        });

        comboSignalA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A0", "A1", "A2", "A3", "A4", "A5", "A6", "A7" }));
        comboSignalA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSignalAActionPerformed(evt);
            }
        });

        tiempoMuestreo.setText("0.1");
        tiempoMuestreo.setToolTipText("");
        tiempoMuestreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tiempoMuestreoActionPerformed(evt);
            }
        });

        jLabel3.setText("Tiempo de muestreo");

        seleccionSenal.add(signalD);
        signalD.setText("Señales Digitales");
        signalD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signalDActionPerformed(evt);
            }
        });

        seleccionSenal.add(signalA);
        signalA.setText("Señales Analógicas");
        signalA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signalAActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(204, 255, 204));
        jButton1.setText("Seleccionar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        DO0.setText("DO0");
        DO0.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                DO0StateChanged(evt);
            }
        });
        DO0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DO0ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel1.setText("Inputs Signals");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel2.setText("Outputs DIgital Signals");

        DO1.setText("DO1");
        DO1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DO1ActionPerformed(evt);
            }
        });

        DO2.setText("DO2");
        DO2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DO2ActionPerformed(evt);
            }
        });

        DO3.setText("DO3");
        DO3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DO3ActionPerformed(evt);
            }
        });

        jLabel4.setText("s");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(signalD, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(comboSignalA, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel3)
                                        .addComponent(comboSignalD, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(DO2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(DO3))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(DO0)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(DO1)))))
                        .addGap(0, 24, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(tiempoMuestreo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jButton1))
                .addGap(17, 17, 17))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(signalA))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(signalA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboSignalA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(signalD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboSignalD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tiempoMuestreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(12, 12, 12)
                .addComponent(jButton1)
                .addGap(35, 35, 35)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DO0, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DO1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DO2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DO3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout linePanelLayout = new javax.swing.GroupLayout(linePanel);
        linePanel.setLayout(linePanelLayout);
        linePanelLayout.setHorizontalGroup(
            linePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 547, Short.MAX_VALUE)
        );
        linePanelLayout.setVerticalGroup(
            linePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 436, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(linePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(linePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tiempoMuestreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tiempoMuestreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tiempoMuestreoActionPerformed

    private void signalDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signalDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_signalDActionPerformed

    private void signalAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signalAActionPerformed
            // TODO add your handling code here:
            
    }//GEN-LAST:event_signalAActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        timeMues = getTiempoMuestreo();  
        System.out.println("Tiempo de Muestreo: " + timeMues);  // Imprime el valor
        
        linePanel.removeAll();   // 2. Elimina todos los componentes del linePanel
        linePanel.add(newChart); // 3. Añade la nueva instancia de LineChartP a linePanel
        linePanel.revalidate();  // 4. Revalida el linePanel para que se tenga en cuenta cualquier cambio en la estructura de componentes.
        linePanel.repaint();
        linePanel.setLayout(new BorderLayout());
        linePanel.add(newChart, BorderLayout.CENTER);

        if(signalA.isSelected()){
           System.out.println("Señal seleccionada: "+ señalAnSelect);
           tittleChart = señalAnSelect;
                   
        }
        else if(signalD.isSelected()){
            System.out.println("Señal seleccionada: "+ señalDgSelect);
            tittleChart = señalDgSelect;
        }
        else{JOptionPane.showMessageDialog(null, "Error:  Seleccione una señal", "Señal Error", JOptionPane.ERROR_MESSAGE);}
        
        esp32.enviarTexto("T"+timeMues+"|"+tittleChart);
        System.out.println("T"+timeMues+"|"+tittleChart);
        
        if(primero){
            grafica.remove(0);

            scheduler = Executors.newScheduledThreadPool(1);

            ploteando = new Runnable (){
                @Override
                public void run() {

                    if(esp32.newAnalogData || esp32.newDigitalByte){

                            time.add(t);

                            if(tittleChart.charAt(0)=='A'){
                                signal.add((double)esp32.readAnalog);
                                grafica.add( t ,(double)esp32.readAnalog);
                            }

                            else if(tittleChart.charAt(0)=='D'){
                                signal.add((double)esp32.readDigital);
                                grafica.add( t ,(double)esp32.readDigital);
                            }

                            if (grafica.getItemCount() > NUM_VALUES) {
                                grafica.remove(0); 
                            }

                            linePanel.repaint();

                            t += timeMues;
                            System.out.println(t);

                            if(tittleChart.charAt(0)=='A'){
                            esp32.newAnalogData = false;}
                            else if(tittleChart.charAt(0)=='D'){
                            esp32.newDigitalByte = false;}

                        }
                }

            };
            scheduler.scheduleAtFixedRate(ploteando, 0, 200, TimeUnit.MILLISECONDS);
            primero = false;
        }
        
        
        //try {
          //  PrintPlainText.saveToPlainText("seno", 0,newChart.getDataset());
          //  PrintPlainText.saveToPlainText("coseno", 1,newChart.getDataset());
        //} catch (IOException ex) {
          //  Logger.getLogger(MyGui.class.getName()).log(Level.SEVERE, null, ex);
        //}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void comboSignalAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSignalAActionPerformed
        // TODO add your handling code here:
        JComboBox cb = (JComboBox)evt.getSource();
        señalAnSelect = (String)cb.getSelectedItem();
        
    }//GEN-LAST:event_comboSignalAActionPerformed

    private void comboSignalDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSignalDActionPerformed
        JComboBox cb = (JComboBox)evt.getSource();
        señalDgSelect = (String)cb.getSelectedItem();// TODO add your handling code here:
    }//GEN-LAST:event_comboSignalDActionPerformed

    private void DO0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DO0ActionPerformed
        // TODO add your handling code here:
        int stateDo0 = 0;
        
        if(DO0.isSelected()){
            System.out.println("D0 ON");
            stateDo0 = 1;
            DO0.setBackground(new Color(251, 208, 62));
        }else{System.out.println("D0 OFF");
              DO0.setBackground(new Color(242, 80, 44));
              stateDo0 = 0;
        }
        
        esp32.enviarTexto("o0"+stateDo0);
        System.out.println("o0"+stateDo0);
    }//GEN-LAST:event_DO0ActionPerformed

    private void DO1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DO1ActionPerformed
        
        int stateDo1 = 0;
        
        if(DO1.isSelected()){
            System.out.println("D1 ON");
            DO1.setBackground(new Color(251, 208, 62));
            stateDo1 = 1;
        }else{System.out.println("D1 OFF");
              DO1.setBackground(new Color(242, 80, 44));
              stateDo1 = 0;
        }// TODO add your handling code here:
        
        esp32.enviarTexto("o1"+stateDo1);
        System.out.println("o1"+stateDo1);
    }//GEN-LAST:event_DO1ActionPerformed

    private void DO2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DO2ActionPerformed
        
        int stateDo2 = 0;
        
        if(DO2.isSelected()){
            System.out.println("D2 ON");
            DO2.setBackground(new Color(251, 208, 62));
            stateDo2 = 1;
        }else{System.out.println("D2 OFF");
              DO2.setBackground(new Color(242, 80, 44));
              stateDo2 = 0;
        }// TODO add your handling code here:
        esp32.enviarTexto("o2"+stateDo2);
        System.out.println("o2"+stateDo2);
    }//GEN-LAST:event_DO2ActionPerformed

    private void DO3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DO3ActionPerformed
        
        int stateDo3 = 0;
        
        if(DO3.isSelected()){
            System.out.println("D3 ON");
            DO3.setBackground(new Color(251, 208, 62));
            stateDo3 = 1;
        }else{System.out.println("D3 OFF");
              DO3.setBackground(new Color(242, 80, 44));
              stateDo3 = 0;
        }// TODO add your handling code here:
        
        esp32.enviarTexto("o3"+stateDo3);
        System.out.println("o3"+stateDo3);
    }//GEN-LAST:event_DO3ActionPerformed

    private void DO0StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_DO0StateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_DO0StateChanged

    public double getTiempoMuestreo() {
        String timeS =tiempoMuestreo.getText();
        double tiempoMues = 0.0;
        try {
            tiempoMues = Double.parseDouble(timeS);
            
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Error: '" + timeS+ "' no es un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        return tiempoMues;
    }
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton DO0;
    private javax.swing.JToggleButton DO1;
    private javax.swing.JToggleButton DO2;
    private javax.swing.JToggleButton DO3;
    private javax.swing.JComboBox<String> comboSignalA;
    private javax.swing.JComboBox<String> comboSignalD;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel linePanel;
    private javax.swing.ButtonGroup seleccionSenal;
    private javax.swing.JRadioButton signalA;
    private javax.swing.JRadioButton signalD;
    private javax.swing.JTextField tiempoMuestreo;
    // End of variables declaration//GEN-END:variables
}
